AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  createComment

  Sample SAM Template for createComment

Globals:
  Function:
    Timeout: 3

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyApi
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'http://localhost:3000'"
        
  CreateCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: createComment
      CodeUri: create-comment/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        CreateComment:
          Type: Api
          Properties:
            Path: /createComment
            Method: post
            RestApiId: !Ref MyApi

  UpdateCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: updateComment
      CodeUri: update-comment/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        UpdateComment:
          Type: Api
          Properties:
            Path: /updateComment
            Method: put
            RestApiId: !Ref MyApi

  DeleteCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deleteComment
      CodeUri: delete-comment/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        DeleteComment:
          Type: Api
          Properties:
            Path: /deleteComment
            Method: delete
            RestApiId: !Ref MyApi

  GetCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getComment
      CodeUri: get-comment/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        GetComment:
          Type: Api
          Properties:
            Path: /getComment
            Method: get
            RestApiId: !Ref MyApi

  GetAllCommentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAllComments
      CodeUri: get-all-comments/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        GetAllComments:
          Type: Api
          Properties:
            Path: /getAllComments
            Method: get
            RestApiId: !Ref MyApi

  CreateSelectedTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: createSelectedText
      CodeUri: create-selectedText/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        CreateSelectedText:
          Type: Api
          Properties:
            Path: /createSelectedText
            Method: post
            RestApiId: !Ref MyApi

  UpdateSelectedTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: updateSelectedText
      CodeUri: update-selectedText/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        UpdateSelectedText:
          Type: Api
          Properties:
            Path: /updateSelectedText
            Method: put
            RestApiId: !Ref MyApi

  DeleteSelectedTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deleteSelectedText
      CodeUri: delete-selectedText/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        DeleteSelectedText:
          Type: Api
          Properties:
            Path: /deleteSelectedText
            Method: delete
            RestApiId: !Ref MyApi

  GetSelectedTextFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getSelectedText
      CodeUri: get-selectedText/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        GetSelectedText:
          Type: Api
          Properties:
            Path: /getSelectedText
            Method: get
            RestApiId: !Ref MyApi

  GetAllSelectedTextsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAllSelectedTexts
      CodeUri: get-all-selectedTexts/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        GetAllSelectedTexts:
          Type: Api
          Properties:
            Path: /getAllSelectedTexts
            Method: get
            RestApiId: !Ref MyApi

Outputs:
  CreateCommentApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  CreateCommentFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt CreateCommentFunction.Arn
  CreateCommentFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt CreateCommentFunctionRole.Arn
